name: Distribute iOS .ipa
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the environment"
        required: true
        default: release
        type: choice
        options:
          - release
          - beta

jobs:
  Build-And-Distribute-iOS:
    runs-on: macos-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Get current build_number
        id: build_number
        run: echo "build_number=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4.2.2

      - uses: actions/setup-java@v4.6.0
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up .p8 file
        run: |
          echo "${{ secrets.PRIVATE_KEY }}" | base64 --decode > AuthKey.p8

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.12.3'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
  
      - name: Generate JWT Token
        id: generate_token
        env:
          ISSUER_ID: ${{ secrets.ISSUER_ID }}
          KEY_ID: ${{ secrets.KEY_ID }}
        run: |
          python3 generate_token.py > token.txt
          echo "jwt_token=$(cat token.txt)" >> $GITHUB_ENV

      - name: 'Create application.config file'
        run: |
          touch flutter_application/assets/config/application.config
          cd flutter_application/assets/config/
          echo API_ENDPOINT="${{ secrets.API_ENDPOINT }}" >> application.config
          echo API_KEY=${{ secrets.API_KEY }} >> application.config
          cat application.config

      - name: Set up certificate and provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles

          echo "${{ secrets.PROVISIONING_PROFILE_DISTRIBUTION }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/distribution.mobileprovision

          echo ${{ secrets.CERTIFICATE_DISTRIBUTION_P12 }} | base64 --decode > signingCertificate.p12
          security create-keychain -p "" build.keychain
          security unlock-keychain -p "" ~/Library/Keychains/build.keychain
          security import signingCertificate.p12 -k ~/Library/Keychains/build.keychain -T /usr/bin/codesign
          rm signingCertificate.p12

      - name: Install Flutter SDK
        uses: mobiledevops/flutter-sdk-action@v1.0.0
        with:
          flutter-sdk-version: 3.24.3
      - run: cd flutter_application && flutter pub get && flutter build ios --release --no-codesign

      - name: Export Signed IPA
        run: |
          cd flutter_application

          xcodebuild \
          -workspace ios/Runner.xcworkspace \
          -scheme Runner \
          -sdk iphoneos \
          -configuration AppStoreDistribution archive \
          -archivePath build/Runner.xcarchive \
          clean archive \
          -allowProvisioningUpdates \
          MARKETING_VERSION=1.0.0 \
          CURRENT_PROJECT_VERSION=${{ steps.set_date.outputs.build_number }}

          xcodebuild \
          -exportArchive \
          -archivePath build/Runner.xcarchive \
          -exportOptionsPlist ios/exportOptions.plist \
          -exportPath build/Runner.ipa

      - name: Upload to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY: ${{ secrets.API_KEY }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.ISSUER_ID }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.KEY_ID }}
        run: |
          cd flutter_application

          xcrun altool --upload-app -f build/Runner.ipa \
          --type ios \
          --apiKey ${{ secrets.KEY_ID }} \
          --apiIssuer ${{ secrets.ISSUER_ID }}